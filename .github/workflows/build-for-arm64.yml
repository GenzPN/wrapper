name: arm64 Build

on:
  push:
    branches: [ "arm64" ]
  pull_request:
    branches: [ "arm64" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y aria2 cmake make gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Install LLVM
      run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
    
    - name: Set up Android NDK r27c
      run: |
        aria2c -o android-ndk-r27c-linux.zip https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip -q -d ~ android-ndk-r27c-linux.zip
    
    - name: Build Project
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=aarch64 -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
        make

    - name: Set outputs
      id: vars
      run: echo "SHA_SHORT=arm64" >> $GITHUB_ENV

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Wrapper.arm64.${{ env.SHA_SHORT }}
        path: |
          rootfs
          wrapper
          Dockerfile

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry (GHCR)
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Get Commit SHA
      run: echo "SHA_SHORT=arm64" >> $GITHUB_ENV

    - name: Build and Push Docker Image to GHCR
      run: |
        IMAGE_NAME="ghcr.io/genzpn/wrapper"
        
        docker build -t ${IMAGE_NAME}:${SHA_SHORT} .
        docker tag ${IMAGE_NAME}:${SHA_SHORT} ${IMAGE_NAME}:latest

        docker push ${IMAGE_NAME}:${SHA_SHORT}
        docker push ${IMAGE_NAME}:latest
