name: x86_64 Windows Build

on:
  push:
    branches: ["windows"]
  pull_request:
    branches: ["windows"]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    - name: Setup MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-make
          make
        
    - name: Download Android NDK
      run: |
        curl -L "https://dl.google.com/android/repository/android-ndk-r27c-windows.zip" -o android-ndk-r27c-windows.zip
        7z x android-ndk-r27c-windows.zip -o"$env:USERPROFILE"
      shell: pwsh

    - name: Build Project
      shell: msys2 {0}
      env:
        CC: gcc
        CXX: g++
      run: |
        export PATH="/mingw64/bin:$PATH"
        mkdir build
        cd build
        cmake -G "Unix Makefiles" \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -DCMAKE_MAKE_PROGRAM=make \
          ..
        make

    - name: Set outputs
      run: echo "SHA_SHORT=Windows.x86_64" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Wrapper.Windows.x86_64.${{ env.SHA_SHORT }}
        path: |
          rootfs
          wrapper.exe
          Dockerfile

  docker:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: crazy-max/ghaction-setup-docker@v2
      with:
        version: latest
        daemon-config: |
          {
            "experimental": true
          }

    - name: Log in to GitHub Container Registry (GHCR)
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Get Commit SHA
      run: echo "SHA_SHORT=Windows.x86_64" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Build and Push Docker Image to GHCR
      run: |
        $IMAGE_NAME="ghcr.io/genzpn/wrapper"
        
        docker build -t ${IMAGE_NAME}:${env:SHA_SHORT} .
        docker tag ${IMAGE_NAME}:${env:SHA_SHORT} ${IMAGE_NAME}:latest

        docker push ${IMAGE_NAME}:${env:SHA_SHORT}
        docker push ${IMAGE_NAME}:latest
      shell: pwsh
